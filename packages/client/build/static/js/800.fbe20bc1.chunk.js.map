{"version":3,"file":"static/js/800.fbe20bc1.chunk.js","mappings":"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","sources":["shared/spinner/spinner.styled.tsx","shared/spinner/spinner.tsx","pages/form.styled.tsx","pages/form.tsx"],"sourcesContent":["import { styled } from \"@mui/material/styles\";\n\nexport const SpinnerWrapper = styled(\"div\")`\n  margin: auto;\n  z-index: 90;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n`;\n\nexport const Spinner = styled(\"div\")`\n  margin: 100px auto;\n  width: 40px;\n  height: 40px;\n  position: relative;\n  text-align: center;\n\n  -webkit-animation: sk-rotate 2s infinite linear;\n  animation: sk-rotate 2s infinite linear;\n\n  @-webkit-keyframes sk-rotate {\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @keyframes sk-rotate {\n    100% {\n      transform: rotate(360deg);\n      -webkit-transform: rotate(360deg);\n    }\n  }\n`;\n\nexport const Dot1 = styled(\"div\")`\n  width: 60%;\n  height: 60%;\n  display: inline-block;\n  position: absolute;\n  top: 0;\n  background-color: ${({ theme }) => theme.palette.primary.main};\n  border-radius: 100%;\n\n  -webkit-animation: sk-bounce 2s infinite ease-in-out;\n  animation: sk-bounce 2s infinite ease-in-out;\n\n  @-webkit-keyframes sk-bounce {\n    0%,\n    100% {\n      -webkit-transform: scale(0);\n    }\n    50% {\n      -webkit-transform: scale(1);\n    }\n  }\n\n  @keyframes sk-bounce {\n    0%,\n    100% {\n      transform: scale(0);\n      -webkit-transform: scale(0);\n    }\n    50% {\n      transform: scale(1);\n      -webkit-transform: scale(1);\n    }\n  }\n`;\n\nexport const Dot2 = styled(\"div\")`\n  width: 60%;\n  height: 60%;\n  display: inline-block;\n  position: absolute;\n  top: 0;\n  background-color: ${({ theme }) => theme.palette.primary.main};\n  border-radius: 100%;\n\n  -webkit-animation: sk-bounce 2s infinite ease-in-out;\n  animation: sk-bounce 2s infinite ease-in-out;\n\n  top: auto;\n  bottom: 0;\n  -webkit-animation-delay: -1s;\n  animation-delay: -1s;\n\n  @-webkit-keyframes sk-bounce {\n    0%,\n    100% {\n      -webkit-transform: scale(0);\n    }\n    50% {\n      -webkit-transform: scale(1);\n    }\n  }\n\n  @keyframes sk-bounce {\n    0%,\n    100% {\n      transform: scale(0);\n      -webkit-transform: scale(0);\n    }\n    50% {\n      transform: scale(1);\n      -webkit-transform: scale(1);\n    }\n  }\n`;\n","\nimport * as S from \"../spinner/spinner.styled\";\n\nfunction Spinner() {\n  return (\n    <S.SpinnerWrapper>\n      <S.Spinner>\n        <S.Dot1 />\n        <S.Dot2 />\n      </S.Spinner>\n    </S.SpinnerWrapper>\n  );\n}\n\nexport default Spinner;\n","import { Button } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\n\nexport const CContainer = styled(\"div\")`\n  width: 100%;\n  padding-top: 10rem;\n  min-height: 90vh;\n  text-align: center;\n\n  @media (max-width: 750px) {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: 100%;\n  }\n`;\n\nexport const FormContainer = styled(\"div\")`\n  padding-top: 17vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n  height: 20vh;\n  padding-bottom: 10vh;\n  color: ${({ theme }) => theme.palette.colorWhite.main};\n\n  @media (max-width: 750px) {\n    padding-top: 7vh;\n  }\n`;\n\nexport const FlexContainer = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 20px;\n\n  @media (max-width: 750px) {\n    width: 40vw;\n    align-items: start;\n    padding-top: 13vh;\n  }\n`;\n\nexport const InputContainer = styled(\"div\")<{ isinscrit: boolean }>`\n  display: ${({ isinscrit }) => (isinscrit ? \"none\" : \"block\")};\n  padding-top: 15vh;\n`;\n\nexport const Inscrivez = styled(\"div\")`\n  color: ${({ theme }) => theme.palette.colorWhite.main};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n  margin-left: 1rem;\n  margin-top: 6rem;\n  cursor: pointer;\n`;\n\nexport const Form = styled(\"div\")`\n  color: ${({ theme }) => theme.palette.colorWhite.main};\n  padding-bottom: 5%;\n`;\n\nexport const ButtonLogin = styled(Button)<{ isinscrit: boolean }>`\n  margin: 1vw;\n  background-color: ${({ isinscrit, theme }) =>\n    isinscrit ? \"transparent\" : theme.palette.secondary.main};\n  border: solid black;\n  width: 15vw;\n  min-width: 15vw;\n  border-radius: 20px;\n  color: ${({ theme }) => theme.palette.primary.main};\n\n  @media (max-width: 750px) {\n    width: 30vw;\n  }\n`;\n\nexport const UserData = styled(\"div\")<{ isinscrit: boolean }>`\n  display: ${({ isinscrit }) => (isinscrit ? \"block\" : \"none\")};\n  color: black;\n`;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport Box from \"@mui/system/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { FormControl, FormGroup } from \"@mui/material\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport { Validate, ValidationGroup } from \"mui-validate\";\nimport axios from \"../axios\";\nimport { useSnackbar } from \"notistack\";\nimport { AdminAPIKey } from \"../config\";\nimport Spinner from \"../shared/spinner/spinner\";\n\nimport * as S from \"../pages/form.styled\";\n\ninterface User {\n  id: number;\n  api_key: number;\n  email: string;\n  password: string;\n}\n\nconst FormConnexion: React.FC = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\n  const userIdCourant = localStorage.getItem(\"usrCourant\");\n  const [newUserId, setNewUserId] = useState(0);\n  const [validationEmail, setValidationEmail] = useState({\n    valid: false,\n    messages: [],\n    display: false,\n  });\n  const [userAPIKey, setUserAPIKey] = useState(\"\");\n  const isAdmin = userAPIKey === AdminAPIKey;\n  const [isLoading, setisLoadind] = useState(false);\n\n  const [isInscrit, setIsInscrit] = useState<boolean>(\n    userIdCourant !== undefined && userIdCourant !== \"\"\n  );\n\n  const refreshPage = () => {\n    window.location.reload();\n  };\n\n  const handleMouseDownPassword = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    event.preventDefault();\n  };\n\n  const [userdata, setUserdata] = useState<User>(); //information bd\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n    api_key: \"\",\n  }); // information form\n\n  const { email, password, api_key } = user;\n\n  const onInputChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    setUser({\n      ...user,\n      [event.target?.name]: event.target?.value,\n    });\n  };\n\n  const genAPIKey = () => {\n    //create a base-36 string that contains 30 chars in a-z,0-9\n    return [...Array(30)]\n      .map((e) => ((Math.random() * 36) | 0).toString(36))\n      .join(\"\");\n  };\n\n  const showError = (error: Error) => {\n    enqueueSnackbar(\"Utilisateur inconnu\", {\n      variant: \"error\",\n    });\n    console.error(error);\n  };\n\n  const fetchGet = async () => {\n    const request = {\n      params: {\n        email: user.email,\n        password: user.password,\n        api_key: userAPIKey,\n      },\n    };\n    await axios\n      .get(`user`, request)\n      .then((response) => {\n        setUserdata(response.data.results[0]);\n      })\n      .catch((err) => {\n        showError(err);\n      });\n  };\n\n  useEffect(() => {\n    if (userdata) {\n      setIsInscrit(true);\n      setUserAPIKey(userdata.api_key.toString());\n      localStorage.setItem(\"usrCourant\", userdata.id.toString());\n    }\n  }, [userdata]);\n\n  const getUser = async () => {\n    if (isInscrit) {\n      localStorage.setItem(\"usrCourant\", \"\");\n      setIsInscrit(false);\n      refreshPage();\n    } else {\n      if (validationEmail.valid) {\n        setisLoadind(true);\n        setTimeout(() => {\n          fetchGet();\n          setisLoadind(false);\n        }, 2000);\n      } else\n        enqueueSnackbar(\"Corrigez les erreurs dans le formulaire\", {\n          variant: \"error\",\n        });\n    }\n  };\n\n  const fetchPost = async () => {\n    const params = {\n      data: user,\n    };\n    await axios\n      .post(\"create\", params)\n      .then((response) => setNewUserId(response.data.results))\n      .catch((err) => {\n        showError(err);\n      });\n  };\n\n  const createUser = () => {\n    const APIKey = genAPIKey();\n    setUser({\n      ...user,\n      api_key: APIKey,\n    });\n    if (validationEmail.valid && user.password && user.api_key) {\n      fetchPost();\n    } else\n      enqueueSnackbar(\"Corrigez les erreurs dans le formulaire\", {\n        variant: \"error\",\n      });\n  };\n\n  useEffect(() => {\n    if (newUserId) {\n      enqueueSnackbar(\"L'utilisateur est créé avec succès\", {\n        variant: \"success\",\n      });\n    }\n  }, [newUserId]);\n\n  const fetchGetUserById = async () => {\n    const request = {\n      params: {\n        id: userIdCourant,\n        api_key: userAPIKey,\n      },\n    };\n    await axios\n      .get(`getuserbyid`, request)\n      .then((response) => {\n        setUserdata(response.data.results[0]);\n      })\n      .catch((err) => {\n        showError(err);\n      });\n  };\n\n  useEffect(() => {\n    if (isInscrit && !userdata) {\n      fetchGetUserById();\n    }\n  }, [userIdCourant]);\n\n  return (\n    <S.CContainer>\n      <Typography variant=\"h2\">Connexion</Typography>\n      <Box\n        sx={{ width: \"70%\", height: \"50vh\", marginLeft: \"14vw\" }}\n        border={4}\n        borderRadius={3}\n      >\n        <ValidationGroup>\n          <>\n            <S.FormContainer>\n              <Box\n                component=\"form\"\n                sx={{\n                  \"& .MuiTextField-root\": {\n                    m: 1,\n                    width: { sm: \"100vw\", md: \"50vw\", lg: \"25vw\" },\n                    borderRadius: \"10px\",\n                  },\n                }}\n                noValidate\n                autoComplete=\"off\"\n              >\n                <S.FlexContainer>\n                  <S.InputContainer isinscrit={isInscrit}>\n                    <Validate\n                      name=\"email\"\n                      regex={[\n                        /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\n                        \"Votre email n'est pas valide\",\n                      ]}\n                      after={(result: any) => setValidationEmail(result)}\n                    >\n                      <TextField\n                        required\n                        id=\"Email\"\n                        label=\"Email\"\n                        name=\"email\"\n                        value={email}\n                        placeholder=\"Entrez votre Email\"\n                        color=\"secondary\"\n                        fullWidth\n                        onChange={(event) => onInputChange(event)}\n                        sx={{\n                          backgroundColor: \" grey\",\n                          boxShadow: \" 0px 8px 8px #566573  inset\",\n                          width: { sm: \"100vw\", md: \"50vw\", lg: \"25vw\" },\n                        }}\n                      />\n                    </Validate>\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        flexWrap: \"wrap\",\n                      }}\n                    >\n                      <FormControl\n                        sx={{\n                          m: 1,\n                          width: { sm: \"100vw\", md: \"50vw\", lg: \"25vw\" },\n                          borderRadius: \"10px\",\n                        }}\n                        variant=\"outlined\"\n                      >\n                        <FormGroup>\n                          <InputLabel\n                            htmlFor=\"outlined-adornment-password\"\n                            color=\"secondary\"\n                          >\n                            Mot de passe\n                          </InputLabel>\n                        </FormGroup>\n                        <FormGroup>\n                          <OutlinedInput\n                            id=\"outlined-adornment-password\"\n                            type={showPassword ? \"text\" : \"password\"}\n                            color=\"secondary\"\n                            fullWidth\n                            autoComplete=\"new-password\"\n                            name=\"password\"\n                            value={password}\n                            onChange={(event) => onInputChange(event)}\n                            sx={{\n                              backgroundColor: \" grey\",\n                              boxShadow: \" 0px 8px 8px #566573  inset\",\n                              borderRadius: \"10px\",\n                              width: {\n                                sm: \"100vw\",\n                                md: \"50vw\",\n                                lg: \"25vw\",\n                              },\n                            }}\n                            endAdornment={\n                              <InputAdornment position=\"end\">\n                                <FormGroup>\n                                  <IconButton\n                                    aria-label=\"toggle password visibility\"\n                                    onClick={handleClickShowPassword}\n                                    onMouseDown={handleMouseDownPassword}\n                                  >\n                                    {showPassword ? (\n                                      <VisibilityOff />\n                                    ) : (\n                                      <Visibility />\n                                    )}\n                                  </IconButton>\n                                </FormGroup>\n                              </InputAdornment>\n                            }\n                            label=\"Password\"\n                          />\n                        </FormGroup>\n                      </FormControl>\n                    </Box>\n                  </S.InputContainer>\n                  {!isLoading ? (\n                    <S.UserData isinscrit={isInscrit}>\n                      USER: {userdata?.email}\n                      <br />\n                      {isAdmin ? \"\" : `API-KEY: ${userdata?.api_key}`}\n                    </S.UserData>\n                  ) : (\n                    <Spinner />\n                  )}\n\n                  <ButtonGroup\n                    disableElevation\n                    variant=\"contained\"\n                    aria-label=\"Disabled elevation buttons\"\n                    sx={{\n                      paddingTop: \"10vh\",\n                    }}\n                  >\n                    <S.ButtonLogin\n                      isinscrit={isInscrit}\n                      variant=\"contained\"\n                      size=\"medium\"\n                      sx={{\n                        marginLeft: \"-6vh\",\n                      }}\n                      onClick={() => getUser()}\n                    >\n                      {isInscrit ? \"LOG OUT\" : \"LOG IN\"}\n                    </S.ButtonLogin>\n                    <S.ButtonLogin\n                      isinscrit={isInscrit}\n                      variant=\"contained\"\n                      size=\"medium\"\n                      onClick={() => createUser()}\n                    >\n                      Sign UP\n                    </S.ButtonLogin>\n                  </ButtonGroup>\n                </S.FlexContainer>\n              </Box>\n            </S.FormContainer>\n          </>\n        </ValidationGroup>\n      </Box>\n    </S.CContainer>\n  );\n};\n\nexport default FormConnexion;\n"],"names":["SpinnerWrapper","styled","_templateObject","_taggedTemplateLiteral","Spinner","_templateObject2","Dot1","_templateObject3","_ref","theme","palette","primary","main","Dot2","_templateObject4","_ref2","_jsx","S","children","_jsxs","CContainer","FormContainer","colorWhite","FlexContainer","InputContainer","isinscrit","ButtonLogin","_templateObject5","_ref3","_templateObject6","_ref4","Button","_templateObject7","_ref5","secondary","_ref6","UserData","_templateObject8","_ref7","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","enqueueSnackbar","useSnackbar","userIdCourant","localStorage","getItem","_useState3","_useState4","newUserId","setNewUserId","_useState5","valid","messages","display","_useState6","validationEmail","setValidationEmail","_useState7","_useState8","userAPIKey","setUserAPIKey","isAdmin","AdminAPIKey","_useState9","_useState10","isLoading","setisLoadind","_useState11","undefined","_useState12","isInscrit","setIsInscrit","_useState13","_useState14","userdata","setUserdata","_useState15","email","password","api_key","_useState16","user","setUser","onInputChange","event","_event$target","_event$target2","_objectSpread","_defineProperty","target","name","value","showError","error","variant","console","fetchGet","_asyncToGenerator","_regeneratorRuntime","mark","_callee","request","wrap","_context","prev","next","params","axios","get","then","response","data","results","catch","err","stop","apply","arguments","useEffect","toString","setItem","id","getUser","_callee2","_context2","window","location","reload","setTimeout","fetchPost","_callee3","_context3","post","createUser","APIKey","_toConsumableArray","Array","map","e","Math","random","join","fetchGetUserById","_callee4","_context4","Typography","Box","sx","width","height","marginLeft","border","borderRadius","ValidationGroup","_Fragment","component","m","sm","md","lg","noValidate","autoComplete","Validate","regex","after","result","TextField","required","label","placeholder","color","fullWidth","onChange","backgroundColor","boxShadow","flexWrap","FormControl","FormGroup","InputLabel","htmlFor","OutlinedInput","type","endAdornment","InputAdornment","position","IconButton","onClick","show","onMouseDown","preventDefault","VisibilityOff","Visibility","concat","ButtonGroup","disableElevation","paddingTop","size"],"sourceRoot":""}